/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*                              36 KEY MATRIX / LAYOUT MAPPING

  ╭────────────────────┬────────────────────╮ ╭─────────────────────┬─────────────────────╮
  │  0   1   2   3   4 │  5   6   7   8   9 │ │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
  │ 10  11  12  13  14 │ 15  16  17  18  19 │ │ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 │
  │ 20  21  22  23  24 │ 25  26  27  28  29 │ │ LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ 30  31  32 │ 33  34  35 ╭───────╯ ╰───────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────╯
          ╰────────────┴────────────╯                 ╰─────────────┴─────────────╯             */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// #define HOST_OS 1
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/36.h"
#include "zmk-helpers/unicode-chars/german.dtsi"

// layer
#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define FUNCTION 3

// home row mod
#define HRM_A &hml LGUI A
#define HRM_S &hml LALT S
#define HRM_D &hml LSHIFT D
#define HRM_F &hml LCTRL F

#define HRM_J &hmr RCTRL J
#define HRM_K &hmr RSHIFT K
#define HRM_L &hmr RALT L
#define HRM_SEMI &hmr RGUI SEMI

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

// euro sign
ZMK_UNICODE_SINGLE(euro_sign, N2, N0, A, C)  // €

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <LT3 LT4>;
            bindings = <&kp ESC>;
        };
        
        combo_ae {
            timeout-ms = <50>;
            key-positions = <LT2 LM4>;
            bindings = <&de_ae>;
            layers = <DEFAULT>;
        };
        
        combo_oe {
            timeout-ms = <50>;
            key-positions = <LT2 RT3>;
            bindings = <&de_oe>;
            layers = <DEFAULT>;
        };
        
        combo_ue {
            timeout-ms = <50>;
            key-positions = <LT2 RT1>;
            bindings = <&de_ue>;
            layers = <DEFAULT>;
        };

        combo_sz {
            timeout-ms = <50>;
            key-positions = <LB4 LM3>;
            bindings = <&de_eszett>;
            layers = <DEFAULT>;
        };
    };

    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
            compatible = "zmk,keymap";

        default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |
// |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |
// |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  |
//             | TAB | LOW | SPC |   | ENT | RSE | BCK |
            bindings = <
   &kp Q       &kp W       &kp E        &kp R        &kp T         &kp Y   &kp U        &kp I        &kp O       &kp P
   &hml LGUI A &hml LALT S &hml LSHFT D &hml LCTRL F &kp G         &kp H   &hmr RCTRL J &hmr RSHFT K &hmr RALT L &hmr RGUI SEMI
   &kp Z       &kp X       &kp C        &kp V        &kp B         &kp N   &kp M        &kp COMMA    &kp DOT     &kp FSLH
                           &kp TAB      &mo LOWER    &kp SPACE     &kp RET &mo RAISE    &bspc_del
            >;
        };
        lower_layer {
// -----------------------------------------------------------------------------------------
// |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |
// | LEFT|  UP | DOWN|RIGHT|     |   |     |  4  |  5  |  6  |COMMA|
// |     |     |     |     |     |   | RPT |  1  |  2  |  3  | DOT |
//             | TAB |     | SPC |   | ENT | FNC | BCK |
            bindings = <
   &kp N1   &kp N2 &kp N3   &kp N4    &kp N5        &kp N6      &kp N7       &kp N8 &kp N9 &kp N0
   &kp LEFT &kp UP &kp DOWN &kp RIGHT &none         &key_repeat &kp N4       &kp N5 &kp N6 &kp COMMA
   &none    &none  &none    &none     &none         &kp N0      &kp N1       &kp N2 &kp N3 &kp DOT
                   &trans   &none     &kp SPACE     &kp RET     &mo FUNCTION &trans
            >;
        };

        raise_layer {
// -----------------------------------------------------------------------------------------
// |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |     |     |
// |  <  |  [  |  {  |  (  |  '  |   |  "  |  )  |  }  |  ]  |  >  |
// |     |  /  |  =  |  -  |  `  |   |  |  |  _  |  +  |  \  |  ~  |
//             | TAB | FNC | SPC |   | ENT |     | BCK |
            bindings = <
   &kp EXCL &kp AT   &kp HASH  &kp DLLR     &kp PRCNT     &kp CARET &kp AMPS  &kp ASTRK &euro_sign &none
   &kp LT   &kp LBKT &kp LBRC  &kp LPAR     &kp SQT       &kp DQT   &kp RPAR  &kp RBRC  &kp RBKT   &kp GT
   &none    &kp FSLH &kp EQUAL &kp MINUS    &kp GRAVE     &kp PIPE  &kp UNDER &kp PLUS  &kp BSLH   &kp TILDE
                     &trans    &mo FUNCTION &kp SPACE     &kp RET   &none     &trans
            >;
        };

        function_layer {
// -----------------------------------------------------------------------------------------
// |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 |
// |     |PRINT| HOME| END | F11 |   | F12 |PG_UP|PG_DN| INS |BRI+ |
// | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |VOL+ |VOL- |VOLm |BRI- |
//             | TAB |     | SPC |   | ENT |     | BCK |
            bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5            &kp F6       &kp F7       &kp F8       &kp F9     &kp F10
   &none        &kp PSCRN    &kp HOME     &kp END      &kp F11           &kp F12      &kp PG_UP    &kp PG_DN    &kp INSERT &kp C_BRI_UP
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &none        &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE &kp C_BRI_DN
                             &trans       &none        &kp SPACE         &kp RET      &none        &trans
            >;
        };
    };
};
